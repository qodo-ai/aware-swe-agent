[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aware-swe-agent"
version = "0.1.0"
description = "An autonomous software engineering agent designed to solve real-world software issues by leveraging deep contextual understanding of codebases and documentation"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Qodo Team", email = "support@qodo.ai"}
]
maintainers = [
    {name = "Qodo Team", email = "support@qodo.ai"}
]
keywords = ["ai", "software-engineering", "automation", "swe-bench", "qodo", "aware"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.11"
dependencies = [
    "datasets>=2.0.0",
    "docker>=6.0.0",
    "python-dotenv>=1.0.0",
    "swebench>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/qodo-ai/aware-swe-agent"
Documentation = "https://github.com/qodo-ai/aware-swe-agent#readme"
Repository = "https://github.com/qodo-ai/aware-swe-agent"
"Bug Tracker" = "https://github.com/qodo-ai/aware-swe-agent/issues"

[project.scripts]
aware-swe-run-instance = "aware_swe_agent.benchmarks.swebench_verified.run_swe_instance:main"
aware-swe-run-instances = "aware_swe_agent.benchmarks.swebench_verified.run_swe_instances:main"
aware-swe-find-batch = "aware_swe_agent.benchmarks.swebench_verified.find_swe_batch:main"
ask-aware = "aware_swe_agent.examples.aware_open_repos_analysis.ask_aware:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["aware_swe_agent"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "docker.*",
    "datasets.*",
    "swebench.*",
]
ignore_missing_imports = true